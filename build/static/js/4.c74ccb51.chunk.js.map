{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/hooks/use-http.js","components/lib/api.js","pages/NewQuote.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","module","exports","Card","props","className","classes","card","children","QuoteForm","useState","isFocused","setIsFocused","authorInputRef","useRef","textInputRef","dispatch","useDispatch","when","message","onFocus","console","log","form","onSubmit","event","preventDefault","enteredAuthor","current","enteredText","newObject","author","text","formActions","addItemHendler","onAddQuote","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","httpReducer","state","action","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","sendRequest","useCallback","requestData","a","FIREBASE_DOMAIN","addQuote","quoteData","fetch","method","body","JSON","stringify","headers","response","json","ok","Error","NewQuote","history","useHistory","useEffect"],"mappings":"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","file":"static/js/4.c74ccb51.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__lCHcB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__245it\",\"loading\":\"QuoteForm_loading__pygtM\",\"control\":\"QuoteForm_control__2C8hP\",\"actions\":\"QuoteForm_actions__2gD9V\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef,Fragment } from 'react';\nimport { useState } from 'react'\nimport {Prompt} from 'react-router-dom'\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from \"react-redux\"\nimport { formActions } from \"../../components/store\"\n\nconst QuoteForm = (props) => {\n  const [isFocused, setIsFocused] = useState(false)\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const dispatch = useDispatch();\n\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n    const newObject = {\n      author: enteredAuthor,\n      text: enteredText\n    }\n    dispatch(formActions.addItemHendler(newObject))\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n  const finishHandler=()=>{\n   setIsFocused(false) \n  }\n\n  const onFocusHandler = () => {\n    \n    setIsFocused(true);\n    console.log('form')\n    \n  }\n  return (\n    <Fragment>\n    <Prompt when={isFocused} message={()=>'Are you sure to leave this page?All your entered data will be lost'}/>\n    <Card>\n    \n      <form onFocus={onFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={finishHandler} className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://shabnam-71010-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport QuoteForm from '../components/quotes/QuoteForm'\r\nimport useHttp from '../components/hooks/use-http'\r\nimport { addQuote} from '../components/lib/api'\r\nconst NewQuote = () => {\r\n    const { sendRequest, status } = useHttp(addQuote)\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        if (status === 'completed') {\r\n            history.push('/quotes')\r\n        }\r\n    }, [status,history])\r\n    const onAddHandler = (quoteData) => {\r\n        sendRequest(quoteData)\r\n    }\r\n    return (\r\n        <div>\r\n            <QuoteForm  isLoading={status==='pending'}onAddQuote={onAddHandler} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewQuote\r\n"],"sourceRoot":""}